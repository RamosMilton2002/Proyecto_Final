/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Estacion_Expres;

import com.mycompany.proyecto_final.Registros;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MSI-THIN
 */
public class Vehiculo extends javax.swing.JFrame {

    /**
     * Creates new form Vehiculo
     */
    private void limpiar() {
        txtMatr.setText(null);
        txtCedCli.setText(null);
        ComboxTipo.setSelectedItem(null);
        CmboxMarca.setSelectedItem(null);
        ComboxModelo.setSelectedItem(null);
        ComboxColor.setSelectedItem(null);
    }

    public void Comb_Tipo() {
        String sql = "call sistema_parqueadero.OBTENERCATPADRE(1)";
        Conec c1 = new Conec();
        try {
            ResultSet res = c1.EjecutaSQL(sql);
            while (res.next()) {
                ComboxTipo.addItem(res.getString("Cat_Nombre"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Comb_Color() {
        String sql = "call sistema_parqueadero.OBTENERCATPADRE(4)";
        Conec c1 = new Conec();
        try {
            ResultSet res = c1.EjecutaSQL(sql);
            while (res.next()) {
                ComboxColor.addItem(res.getString("Cat_Nombre"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public Vehiculo() {
        initComponents();
        mostrarTablaVe();
        Comb_Tipo();
        Comb_Color();
        Cliente c = new Cliente();
        txtCedCli.setText(c.cedulaa);
//       txtCedCli.setText(Integer.toString(cedulaa));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlV = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TblaVe = new javax.swing.JTable();
        txtMatr = new javax.swing.JTextField();
        txtCedCli = new javax.swing.JTextField();
        btnRegistr = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        ComboxTipo = new javax.swing.JComboBox<>();
        ComboxColor = new javax.swing.JComboBox<>();
        ComboxModelo = new javax.swing.JComboBox<>();
        CmboxMarca = new javax.swing.JComboBox<>();
        btnBus = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setText("VEHICULOS");

        jLabel9.setText("MATRICULA: ");

        jLabel10.setText("CEDULA CLIENTE: ");

        jLabel11.setText("MARCA:");

        jLabel12.setText("MODELO:");

        jLabel13.setText("COLOR: ");

        jLabel14.setText("TIPO:");

        TblaVe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MATRICULA", "CEDULA CLIENTE", "MARCA", "MODELO", "COLOR", "TIPO"
            }
        ));
        TblaVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblaVeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TblaVe);

        txtMatr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatrActionPerformed(evt);
            }
        });

        txtCedCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedCliActionPerformed(evt);
            }
        });

        btnRegistr.setText("REGISTRAR");
        btnRegistr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrActionPerformed(evt);
            }
        });

        jButton4.setText("ELIMINAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        ComboxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el tipo de vehiculo" }));
        ComboxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboxTipoActionPerformed(evt);
            }
        });

        ComboxColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un color" }));
        ComboxColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboxColorActionPerformed(evt);
            }
        });

        ComboxModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el modelo" }));
        ComboxModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboxModeloActionPerformed(evt);
            }
        });

        CmboxMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una marca" }));
        CmboxMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmboxMarcaActionPerformed(evt);
            }
        });

        btnBus.setText("BUSCAR");
        btnBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusActionPerformed(evt);
            }
        });

        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVLayout = new javax.swing.GroupLayout(pnlV);
        pnlV.setLayout(pnlVLayout);
        pnlVLayout.setHorizontalGroup(
            pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVLayout.createSequentialGroup()
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlVLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlVLayout.createSequentialGroup()
                                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlVLayout.createSequentialGroup()
                                        .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnRegistr))
                                        .addGap(127, 127, 127))
                                    .addGroup(pnlVLayout.createSequentialGroup()
                                        .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ComboxModelo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtMatr))
                                        .addGap(25, 25, 25)))
                                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlVLayout.createSequentialGroup()
                                        .addComponent(txtCedCli, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBus))
                                    .addComponent(CmboxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ComboxColor, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlVLayout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(108, 108, 108)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        pnlVLayout.setVerticalGroup(
            pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton1))
                .addGap(27, 27, 27)
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(8, 8, 8)
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCedCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmboxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboxModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlVLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnRegistr))
                    .addGroup(pnlVLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton4)))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TblaVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblaVeMouseClicked
        // TODO add your handling code here:
        txtMatr.setText(TblaVe.getValueAt(TblaVe.getSelectedRow(), 0).toString());
        txtCedCli.setText(TblaVe.getValueAt(TblaVe.getSelectedRow(), 1).toString());
        ComboxTipo.setSelectedItem(TblaVe.getValueAt(TblaVe.getSelectedRow(), 5).toString());
        CmboxMarca.setSelectedItem(TblaVe.getValueAt(TblaVe.getSelectedRow(), 2).toString());
        ComboxModelo.setSelectedItem(TblaVe.getValueAt(TblaVe.getSelectedRow(), 3).toString());
        ComboxColor.setSelectedItem(TblaVe.getValueAt(TblaVe.getSelectedRow(), 4).toString());
    }//GEN-LAST:event_TblaVeMouseClicked

    private void txtMatrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatrActionPerformed

    private void txtCedCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedCliActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtCedCliActionPerformed

    private void btnRegistrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrActionPerformed
        // TODO add your handling code here:
        Conec c1 = new Conec();

        int cedula;
        String matricula = txtMatr.getText();
        int cedulacli = Integer.parseInt(txtCedCli.getText());
        String marca = CmboxMarca.getSelectedItem().toString();
        String modelo = ComboxModelo.getSelectedItem().toString();
        String color = ComboxColor.getSelectedItem().toString();
        String tipo = ComboxTipo.getSelectedItem().toString();
//        String sql2 ="call sistema_parqueadero.BUSCARVEHI("+ matricula+");";
//        ResultSet re = null;
//        try {
//            re = c1.EjecutaSQL(sql2);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Vehiculo.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            if(re.next()){
//                int selectedRow = TblaVe.getSelectedRow();
//                if(selectedRow == -1){
//                    JOptionPane.showMessageDialog(this, "Por favor, seleccione un registro para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
//                }else{
//                    
//                }
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(Vehiculo.class.getName()).log(Level.SEVERE, null, ex);
//        }
        String sql = ("call sistema_parqueadero.INSERTARVE('" + matricula + "','" + cedulacli + "','" + marca + "','"
                + modelo + "','" + color + "','" + tipo + "')");
        System.out.println("´´´´" + sql);
        try {
            c1.EjecutaSQLIUD(sql);
        } catch (ClassNotFoundException e) {
        }
        mostrarTablaVe();
        limpiar();

    }//GEN-LAST:event_btnRegistrActionPerformed


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = TblaVe.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un registro para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        var Veh_Matricula = Integer.parseInt(TblaVe.getValueAt(selectedRow, 0).toString());

        try {
            Connection connection = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/sistema_parqueadero?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "2002");

            // Llamar al procedimiento almacenado para eliminar el registro
            String sql = "call sistema_parqueadero.ELIMINARVE(?)";
            CallableStatement statement = connection.prepareCall(sql);
            statement.setInt(1, Veh_Matricula);
            statement.execute();

            statement.close();
            connection.close();
            // Eliminar la fila de la tabla
            DefaultTableModel model = (DefaultTableModel) TblaVe.getModel();
            model.removeRow(selectedRow);

            JOptionPane.showMessageDialog(this, "Cliente eliminado correctamente.", "Eliminación Exitosa", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar .", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        mostrarTablaVe();
        limpiar();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void ComboxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboxTipoActionPerformed
        // TODO add your handling code here:
        String sql2 = "call sistema_parqueadero.BUSCARCATEGO('" + ComboxTipo.getSelectedItem() + "')";
        Conec c1 = new Conec();
        try {
            ResultSet res = c1.EjecutaSQL(sql2);
            while (res.next()) {
                String sql1 = "call sistema_parqueadero.OBTENERCATPADRE(" + res.getInt("Cat_Id") + ")";
                res = c1.EjecutaSQL(sql1);
                CmboxMarca.removeAllItems();
                while (res.next()) {
                    CmboxMarca.addItem(res.getString("Cat_Nombre"));
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboxTipoActionPerformed

    private void ComboxColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboxColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboxColorActionPerformed

    private void ComboxModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboxModeloActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_ComboxModeloActionPerformed

    private void CmboxMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmboxMarcaActionPerformed
        // TODO add your handling code here:
        String sql2 = "call sistema_parqueadero.BUSCARCATEGO('" + CmboxMarca.getSelectedItem() + "')";
        Conec c1 = new Conec();
        try {
            ResultSet res = c1.EjecutaSQL(sql2);
            while (res.next()) {
                String sql1 = "call sistema_parqueadero.OBTENERCATPADRE(" + res.getInt("Cat_Id") + ")";
                res = c1.EjecutaSQL(sql1);
                ComboxModelo.removeAllItems();
                while (res.next()) {
                    ComboxModelo.addItem(res.getString("Cat_Nombre"));
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_CmboxMarcaActionPerformed

    private void btnBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusActionPerformed
        // TODO add your handling code here:
        Conec c = new Conec();
        int cedula;
        try {
            cedula = Integer.parseInt(txtCedCli.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El campo de cédula debe contener solo números.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String sql = "call sistema_parqueadero.BUSCARPERSONAS(" + txtCedCli.getText() + ");";
        try {
            ResultSet res = c.EjecutaSQL(sql);
            if (res.next()) {
                JOptionPane.showMessageDialog(this, "Cliente existente.", "Cliente", JOptionPane.INFORMATION_MESSAGE);
            } else {
                int opcion = JOptionPane.showConfirmDialog(null, "Desea Registrar un nuevo cliente", "Registrar", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.YES_OPTION) {
                    Cliente cl = new Cliente();
                    cl.setVisible(true);
                } else if (opcion == JOptionPane.NO_OPTION) {
                    System.out.println("El usuario eligió 'No'");
                }
            }
            }catch (ClassNotFoundException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            Logger.getLogger(Registros.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnBusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cliente cl = new Cliente();
        cl.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

     

    public void mostrarTablaVe() {
        
        String sql = ("call sistema_parqueadero.MOSTRARVE();");
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        modelo.addColumn("MATRICULA");
        modelo.addColumn("CEDULA CLIENTE");
        modelo.addColumn("MARCA");
        modelo.addColumn("MODELO");
        modelo.addColumn("COLOR");
        modelo.addColumn("TIPO");

        TblaVe.setModel(modelo);
        String[] datos = new String[6];
        try {
            Conec c1 = new Conec();
            ResultSet res = c1.EjecutaSQL(sql);
            while (res.next()) {
                datos[0] = res.getString(1);
                datos[1] = res.getString(2);
                datos[2] = res.getString(3);
                datos[3] = res.getString(4);
                datos[4] = res.getString(5);
                datos[5] = res.getString(6);
                modelo.addRow(datos);

            }
            res.close();
            TblaVe.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showInternalMessageDialog(null, "error" + e.toString());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vehiculo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmboxMarca;
    private javax.swing.JComboBox<String> ComboxColor;
    private javax.swing.JComboBox<String> ComboxModelo;
    private javax.swing.JComboBox<String> ComboxTipo;
    private javax.swing.JTable TblaVe;
    private javax.swing.JButton btnBus;
    private javax.swing.JButton btnRegistr;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlV;
    private javax.swing.JTextField txtCedCli;
    private javax.swing.JTextField txtMatr;
    // End of variables declaration//GEN-END:variables
}
